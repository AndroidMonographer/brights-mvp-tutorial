apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

/**
 *
 * Since we need to have a shared test classes between modules, we define another module
 * and put our classes in our main source set. This is to allow other modules
 * who cannot access the androidTest within in other modules, to access this module, BUT as a
 * test dependency only
 *
 * https://stackoverflow.com/questions/27332652/how-to-use-androidtest-of-another-module
 *
 * I suggest you the following strategy : create a new module test-utils and put MyTestBase.java
 * in the main sources of this module.
 *
 * Then you add this test-utils as a test dependency in all modules where it is required
 * androidTestCompile project(':test-utils')
 *
 * https://stackoverflow.com/questions/34020487/android-tests-depends-on-test-classes-on-a-library-project
 *
 * To further extend the answer, I may point out that I placed my shared classes in the main
 * directory of ANOTHER library module. This library module is imported with "androidTestCompile".
 * This way I am avoiding test classes to be included in the released apk.
 * Only the tests build will include them.
 */
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //testCompile 'junit:junit:4.12'

    compile 'com.squareup.okhttp3:mockwebserver:3.6.0'

    // 64k Method limit (https://developer.android.com/studio/build/multidex.html)
    compile 'com.android.support:multidex:1.0.1'
}
